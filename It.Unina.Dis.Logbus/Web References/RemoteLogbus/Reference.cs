//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:2.0.50727.4927
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Il codice sorgente è stato generato automaticamente da Microsoft.VSDesigner, versione 2.0.50727.4927.
// 
#pragma warning disable 1591

namespace It.Unina.Dis.Logbus.RemoteLogbus {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ChannelManagement", Namespace="http://www.dis.unina.it/logbus-ng/wsdl")]
    public partial class ChannelManagement : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ListChannelsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateChannelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChannelInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteChannelOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ChannelManagement() {
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ListChannelsCompletedEventHandler ListChannelsCompleted;
        
        /// <remarks/>
        public event CreateChannelCompletedEventHandler CreateChannelCompleted;
        
        /// <remarks/>
        public event GetChannelInformationCompletedEventHandler GetChannelInformationCompleted;
        
        /// <remarks/>
        public event DeleteChannelCompletedEventHandler DeleteChannelCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:#ListChannels", RequestNamespace="", ResponseNamespace="", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("list")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://www.dis.unina.it/logbus-ng/wsdl")]
        public string[] ListChannels() {
            object[] results = this.Invoke("ListChannels", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ListChannelsAsync() {
            this.ListChannelsAsync(null);
        }
        
        /// <remarks/>
        public void ListChannelsAsync(object userState) {
            if ((this.ListChannelsOperationCompleted == null)) {
                this.ListChannelsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListChannelsOperationCompleted);
            }
            this.InvokeAsync("ListChannels", new object[0], this.ListChannelsOperationCompleted, userState);
        }
        
        private void OnListChannelsOperationCompleted(object arg) {
            if ((this.ListChannelsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListChannelsCompleted(this, new ListChannelsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:#CreateChannel", RequestNamespace="", ResponseNamespace="", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void CreateChannel(ChannelCreationInformation description) {
            this.Invoke("CreateChannel", new object[] {
                        description});
        }
        
        /// <remarks/>
        public void CreateChannelAsync(ChannelCreationInformation description) {
            this.CreateChannelAsync(description, null);
        }
        
        /// <remarks/>
        public void CreateChannelAsync(ChannelCreationInformation description, object userState) {
            if ((this.CreateChannelOperationCompleted == null)) {
                this.CreateChannelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateChannelOperationCompleted);
            }
            this.InvokeAsync("CreateChannel", new object[] {
                        description}, this.CreateChannelOperationCompleted, userState);
        }
        
        private void OnCreateChannelOperationCompleted(object arg) {
            if ((this.CreateChannelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateChannelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:#GetChannelInformation", RequestNamespace="", ResponseNamespace="", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("info")]
        public ChannelInformation GetChannelInformation(string id) {
            object[] results = this.Invoke("GetChannelInformation", new object[] {
                        id});
            return ((ChannelInformation)(results[0]));
        }
        
        /// <remarks/>
        public void GetChannelInformationAsync(string id) {
            this.GetChannelInformationAsync(id, null);
        }
        
        /// <remarks/>
        public void GetChannelInformationAsync(string id, object userState) {
            if ((this.GetChannelInformationOperationCompleted == null)) {
                this.GetChannelInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChannelInformationOperationCompleted);
            }
            this.InvokeAsync("GetChannelInformation", new object[] {
                        id}, this.GetChannelInformationOperationCompleted, userState);
        }
        
        private void OnGetChannelInformationOperationCompleted(object arg) {
            if ((this.GetChannelInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChannelInformationCompleted(this, new GetChannelInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:#DeleteChannel", RequestNamespace="", ResponseNamespace="", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void DeleteChannel(string id) {
            this.Invoke("DeleteChannel", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void DeleteChannelAsync(string id) {
            this.DeleteChannelAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteChannelAsync(string id, object userState) {
            if ((this.DeleteChannelOperationCompleted == null)) {
                this.DeleteChannelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteChannelOperationCompleted);
            }
            this.InvokeAsync("DeleteChannel", new object[] {
                        id}, this.DeleteChannelOperationCompleted, userState);
        }
        
        private void OnDeleteChannelOperationCompleted(object arg) {
            if ((this.DeleteChannelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteChannelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ChannelSubscription", Namespace="http://www.dis.unina.it/logbus-ng/wsdl")]
    public partial class ChannelSubscription : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ListChannelsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAvailableTransportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubscribeChannelOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnsubscribeChannelOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefreshSubscriptionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ChannelSubscription() {
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ListChannelsCompletedEventHandler ListChannelsCompleted;
        
        /// <remarks/>
        public event GetAvailableTransportsCompletedEventHandler GetAvailableTransportsCompleted;
        
        /// <remarks/>
        public event SubscribeChannelCompletedEventHandler SubscribeChannelCompleted;
        
        /// <remarks/>
        public event UnsubscribeChannelCompletedEventHandler UnsubscribeChannelCompleted;
        
        /// <remarks/>
        public event RefreshSubscriptionCompletedEventHandler RefreshSubscriptionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:#ListChannels", RequestNamespace="", ResponseNamespace="", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("list")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://www.dis.unina.it/logbus-ng/wsdl")]
        public string[] ListChannels() {
            object[] results = this.Invoke("ListChannels", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ListChannelsAsync() {
            this.ListChannelsAsync(null);
        }
        
        /// <remarks/>
        public void ListChannelsAsync(object userState) {
            if ((this.ListChannelsOperationCompleted == null)) {
                this.ListChannelsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListChannelsOperationCompleted);
            }
            this.InvokeAsync("ListChannels", new object[0], this.ListChannelsOperationCompleted, userState);
        }
        
        private void OnListChannelsOperationCompleted(object arg) {
            if ((this.ListChannelsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListChannelsCompleted(this, new ListChannelsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:#GetAvailableTransports", RequestNamespace="", ResponseNamespace="", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("list")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://www.dis.unina.it/logbus-ng/wsdl")]
        public string[] GetAvailableTransports() {
            object[] results = this.Invoke("GetAvailableTransports", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAvailableTransportsAsync() {
            this.GetAvailableTransportsAsync(null);
        }
        
        /// <remarks/>
        public void GetAvailableTransportsAsync(object userState) {
            if ((this.GetAvailableTransportsOperationCompleted == null)) {
                this.GetAvailableTransportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvailableTransportsOperationCompleted);
            }
            this.InvokeAsync("GetAvailableTransports", new object[0], this.GetAvailableTransportsOperationCompleted, userState);
        }
        
        private void OnGetAvailableTransportsOperationCompleted(object arg) {
            if ((this.GetAvailableTransportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvailableTransportsCompleted(this, new GetAvailableTransportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:#SubscribeChannel", RequestNamespace="", ResponseNamespace="", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("client-config")]
        public ChannelSubscriptionResponse SubscribeChannel(ChannelSubscriptionRequest request) {
            object[] results = this.Invoke("SubscribeChannel", new object[] {
                        request});
            return ((ChannelSubscriptionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SubscribeChannelAsync(ChannelSubscriptionRequest request) {
            this.SubscribeChannelAsync(request, null);
        }
        
        /// <remarks/>
        public void SubscribeChannelAsync(ChannelSubscriptionRequest request, object userState) {
            if ((this.SubscribeChannelOperationCompleted == null)) {
                this.SubscribeChannelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubscribeChannelOperationCompleted);
            }
            this.InvokeAsync("SubscribeChannel", new object[] {
                        request}, this.SubscribeChannelOperationCompleted, userState);
        }
        
        private void OnSubscribeChannelOperationCompleted(object arg) {
            if ((this.SubscribeChannelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubscribeChannelCompleted(this, new SubscribeChannelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:#UnsubscribeChannel", RequestNamespace="", ResponseNamespace="", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void UnsubscribeChannel(string id) {
            this.Invoke("UnsubscribeChannel", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void UnsubscribeChannelAsync(string id) {
            this.UnsubscribeChannelAsync(id, null);
        }
        
        /// <remarks/>
        public void UnsubscribeChannelAsync(string id, object userState) {
            if ((this.UnsubscribeChannelOperationCompleted == null)) {
                this.UnsubscribeChannelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnsubscribeChannelOperationCompleted);
            }
            this.InvokeAsync("UnsubscribeChannel", new object[] {
                        id}, this.UnsubscribeChannelOperationCompleted, userState);
        }
        
        private void OnUnsubscribeChannelOperationCompleted(object arg) {
            if ((this.UnsubscribeChannelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnsubscribeChannelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:#RefreshSubscription", RequestNamespace="", ResponseNamespace="", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void RefreshSubscription(string id) {
            this.Invoke("RefreshSubscription", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void RefreshSubscriptionAsync(string id) {
            this.RefreshSubscriptionAsync(id, null);
        }
        
        /// <remarks/>
        public void RefreshSubscriptionAsync(string id, object userState) {
            if ((this.RefreshSubscriptionOperationCompleted == null)) {
                this.RefreshSubscriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefreshSubscriptionOperationCompleted);
            }
            this.InvokeAsync("RefreshSubscription", new object[] {
                        id}, this.RefreshSubscriptionOperationCompleted, userState);
        }
        
        private void OnRefreshSubscriptionOperationCompleted(object arg) {
            if ((this.RefreshSubscriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefreshSubscriptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.dis.unina.it/logbus-ng/wsdl")]
    public partial class ChannelCreationInformation {
        
        private string idField;
        
        private string titleField;
        
        private string descriptionField;
        
        private long coalescenceWindowField;
        
        private FilterBase filterField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public long coalescenceWindow {
            get {
                return this.coalescenceWindowField;
            }
            set {
                this.coalescenceWindowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.dis.unina.it/logbus-ng/filters")]
        public FilterBase filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CustomFilter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PropertyFilter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FacilityEqualsFilter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SeverityFilter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MessageRegexMatchFilter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MessageRegexNotMatchFilter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FalseFilter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TrueFilter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NotFilter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OrFilter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AndFilter))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.dis.unina.it/logbus-ng/filters")]
    public abstract partial class FilterBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.dis.unina.it/logbus-ng/wsdl")]
    public partial class ChannelSubscriptionResponse {
        
        private KeyValuePair[] paramField;
        
        private string clientidField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public KeyValuePair[] param {
            get {
                return this.paramField;
            }
            set {
                this.paramField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("client-id")]
        public string clientid {
            get {
                return this.clientidField;
            }
            set {
                this.clientidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.dis.unina.it/logbus-ng/wsdl")]
    public partial class KeyValuePair {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.dis.unina.it/logbus-ng/wsdl")]
    public partial class ChannelSubscriptionRequest {
        
        private KeyValuePair[] paramField;
        
        private string channelidField;
        
        private string transportField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public KeyValuePair[] param {
            get {
                return this.paramField;
            }
            set {
                this.paramField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("channel-id")]
        public string channelid {
            get {
                return this.channelidField;
            }
            set {
                this.channelidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string transport {
            get {
                return this.transportField;
            }
            set {
                this.transportField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.dis.unina.it/logbus-ng/wsdl")]
    public partial class ChannelInformation {
        
        private string idField;
        
        private string titleField;
        
        private string descriptionField;
        
        private long coalescenceWindowField;
        
        private string clientsField;
        
        private FilterBase filterField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public long coalescenceWindow {
            get {
                return this.coalescenceWindowField;
            }
            set {
                this.coalescenceWindowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
        public string clients {
            get {
                return this.clientsField;
            }
            set {
                this.clientsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.dis.unina.it/logbus-ng/filters")]
        public FilterBase filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.dis.unina.it/logbus-ng/filters")]
    public partial class FilterParameter {
        
        private object valueField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public object value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.dis.unina.it/logbus-ng/filters")]
    public partial class CustomFilter : FilterBase {
        
        private FilterParameter[] parameterField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("parameter", IsNullable=true)]
        public FilterParameter[] parameter {
            get {
                return this.parameterField;
            }
            set {
                this.parameterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.dis.unina.it/logbus-ng/filters")]
    public partial class PropertyFilter : FilterBase {
        
        private string valueField;
        
        private Property propertyNameField;
        
        private ComparisonOperator comparisonField;
        
        /// <remarks/>
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public Property propertyName {
            get {
                return this.propertyNameField;
            }
            set {
                this.propertyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public ComparisonOperator comparison {
            get {
                return this.comparisonField;
            }
            set {
                this.comparisonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.dis.unina.it/logbus-ng/filters")]
    public enum Property {
        
        /// <remarks/>
        Timestamp,
        
        /// <remarks/>
        Severity,
        
        /// <remarks/>
        Facility,
        
        /// <remarks/>
        Host,
        
        /// <remarks/>
        ApplicationName,
        
        /// <remarks/>
        ProcessID,
        
        /// <remarks/>
        MessageID,
        
        /// <remarks/>
        Data,
        
        /// <remarks/>
        Text,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.dis.unina.it/logbus-ng/filters")]
    public enum ComparisonOperator {
        
        /// <remarks/>
        eq,
        
        /// <remarks/>
        neq,
        
        /// <remarks/>
        geq,
        
        /// <remarks/>
        gt,
        
        /// <remarks/>
        lt,
        
        /// <remarks/>
        leq,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.dis.unina.it/logbus-ng/filters")]
    public partial class FacilityEqualsFilter : FilterBase {
        
        private FacilityEqualsFilterFacility facilityField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public FacilityEqualsFilterFacility facility {
            get {
                return this.facilityField;
            }
            set {
                this.facilityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.dis.unina.it/logbus-ng/filters")]
    public enum FacilityEqualsFilterFacility {
        
        /// <remarks/>
        Kernel,
        
        /// <remarks/>
        User,
        
        /// <remarks/>
        Mail,
        
        /// <remarks/>
        System,
        
        /// <remarks/>
        Security,
        
        /// <remarks/>
        Internally,
        
        /// <remarks/>
        Printer,
        
        /// <remarks/>
        News,
        
        /// <remarks/>
        UUCP,
        
        /// <remarks/>
        Cron,
        
        /// <remarks/>
        Security2,
        
        /// <remarks/>
        FTP,
        
        /// <remarks/>
        NTP,
        
        /// <remarks/>
        Audit,
        
        /// <remarks/>
        Alert,
        
        /// <remarks/>
        Clock2,
        
        /// <remarks/>
        Local0,
        
        /// <remarks/>
        Local1,
        
        /// <remarks/>
        Local2,
        
        /// <remarks/>
        Local3,
        
        /// <remarks/>
        Local4,
        
        /// <remarks/>
        Local5,
        
        /// <remarks/>
        Local6,
        
        /// <remarks/>
        Local7,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.dis.unina.it/logbus-ng/filters")]
    public partial class SeverityFilter : FilterBase {
        
        private ComparisonOperator comparisonField;
        
        private Severity severityField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public ComparisonOperator comparison {
            get {
                return this.comparisonField;
            }
            set {
                this.comparisonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public Severity severity {
            get {
                return this.severityField;
            }
            set {
                this.severityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.dis.unina.it/logbus-ng/filters")]
    public enum Severity {
        
        /// <remarks/>
        Emergency,
        
        /// <remarks/>
        Alert,
        
        /// <remarks/>
        Critical,
        
        /// <remarks/>
        Error,
        
        /// <remarks/>
        Warning,
        
        /// <remarks/>
        Notice,
        
        /// <remarks/>
        Info,
        
        /// <remarks/>
        Debug,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MessageRegexNotMatchFilter))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.dis.unina.it/logbus-ng/filters")]
    public partial class MessageRegexMatchFilter : FilterBase {
        
        private string patternField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string pattern {
            get {
                return this.patternField;
            }
            set {
                this.patternField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.dis.unina.it/logbus-ng/filters")]
    public partial class MessageRegexNotMatchFilter : MessageRegexMatchFilter {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.dis.unina.it/logbus-ng/filters")]
    public partial class FalseFilter : FilterBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.dis.unina.it/logbus-ng/filters")]
    public partial class TrueFilter : FilterBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.dis.unina.it/logbus-ng/filters")]
    public partial class NotFilter : FilterBase {
        
        private FilterBase filterField;
        
        /// <remarks/>
        public FilterBase filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.dis.unina.it/logbus-ng/filters")]
    public partial class OrFilter : FilterBase {
        
        private FilterBase[] filterField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("filter")]
        public FilterBase[] filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.dis.unina.it/logbus-ng/filters")]
    public partial class AndFilter : FilterBase {
        
        private FilterBase[] filterField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("filter")]
        public FilterBase[] filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ListChannelsCompletedEventHandler(object sender, ListChannelsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListChannelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListChannelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CreateChannelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetChannelInformationCompletedEventHandler(object sender, GetChannelInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChannelInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChannelInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ChannelInformation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChannelInformation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DeleteChannelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAvailableTransportsCompletedEventHandler(object sender, GetAvailableTransportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAvailableTransportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvailableTransportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SubscribeChannelCompletedEventHandler(object sender, SubscribeChannelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubscribeChannelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubscribeChannelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ChannelSubscriptionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChannelSubscriptionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UnsubscribeChannelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void RefreshSubscriptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591
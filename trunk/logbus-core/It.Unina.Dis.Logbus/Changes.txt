Logbus-ng Change Log

SVN trunk
*Configuration redesigned (version 3.0)
	*Web service activation is performed internally by Logbus server via
	configuration
	*logbus-core section renamed to logbus-server for better readability
	*Logbus client is defined by a base path and an optional suffix to
	handle the general case of web services. In most ASP.NET cases, suffix
	must be valued to ".asmx"
*By default, Logbus server activates no transport factory. These must all be
	activated via configuration. Suggested is to scan the It.Unina.Dis.Logbus
	assembly for the default transports
	*Code commented in SyslogMulticastTransport to prevent registration
*It's not possible to activate custom transport factories
*SyslogTlsTransportFactory supports certificate passwords
*Configuration samples adapted to the new configuration specifications
*LogbusCoreConfiguration class renamed to LogbusServerConfiguration
*ConfigurationHelper.CoreConfiguration member left as obsolete for
	backward-compatibility

version 2.3.42
*Fixed a bug that sometimes prevented the channel to work properly
*Fixed a bug that made LogbusService crash because a channel was created with
	a non-existing custom filter
*Various bug fixes, including TLS client and transport
*SyslogUdpListener can be configured with a custom UDP buffer size to help
	prevent packet loss in some scenarios
*LogbusDaemon and tools based on WebServiceActivator definitely work on Mono
*Downgraded to .NET 2.0 for best backward-compatibility (it still works on
	.NET 3.5 or 4.0)
*Implemented and tested SyslogMulticastReceiver

version 2.0
*Major changes in Logger configuration:
	*Loggers are distinguished by Collectors
	*Loggers can be configured as permanent and with heartbeat function
	*Default logger, collector and heartbeat can be globally specified
	*Each logger refers to a configured collector
*Default "well-known" loggers, for Logbus core, loggers and clients defined for
	diagnostic purposes
*MultiLogger is not supported as logger, but is used internally
*LogbusService is no more publicly visible, and the only way to instantiate it as the
	default implementation of ILogBus is through LogbusSingletonHelper. Configuration
	MUST be set prior to this via App.Config or ConfigurationHelper.CoreConfiguration
	property
*All Logbus-related entities can log their major events to the Logbus logger
*All log messages from Logbus core can be forwarded to other loggers, including
	remote Logbus-ng nodes
*Logbus-ng core can be configured with dynamically loaded runtime plugins
*Default TTL for UDP outbound transport is 60 seconds
*Added GetAvailableFilters and DescribeFilter methods to ChannelSubscription WSDL
*New events for channel creation and deletion
*Implemented TLS inbound channel, logger, forwarder, client and transport, according
	to RFC 5425

version 1.3.1
First public release